:PROPERTIES:
:ID:       ddee6746-3287-40c1-8842-4160f1e74129
:END:
#+layout: post
#+title: CppCoreGuidelines R.34 用 shared_ptr 参数表示共享所有权
#+categories: technology
#+tags: CppCoreGuidelines

[[http://kimi.im/tags.html#CppCoreGuidelines-ref][C++ 核心指南目录]]

"Take a shared_ptr<widget> parameter to express shared ownership"

理由

显式的表明函数的共享所有权


好例子

#+begin_src C++ :exports both :flags -std=c++20 :namespaces std :includes  <iostream> <vector> <algorithm> :eval no-export
class WidgetUser
{
public:
    // WidgetUser will share ownership of the widget
    explicit WidgetUser(std::shared_ptr<widget> w) noexcept:
        m_widget{std::move(w)} {}
    // ...
private:
    std::shared_ptr<widget> m_widget;
};
#+end_src


强化
- 警告：如果一个函数接收 ~shared_ptr<T>~ 的左值引用参数，但是在所有代码
  执行路径上既不赋值，也不调用 ~reset()~ 。考虑使用 ~T*~ 或 ~T&~
- 警告：如果一个函数接收 ~unique_ptr<T>~ 值或常值引用，但是在所有代码路
  径上，不复制或移动到另一个共享指针，考虑使用 ~T*~ 或 ~T&~
- 警告：如果一个函数接收 ~shared_ptr<T>~ 右值引用，考虑使用值传递。
