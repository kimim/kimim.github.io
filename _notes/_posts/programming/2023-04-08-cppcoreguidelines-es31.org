#+layout: post
#+title: CppCoreGuidelines ES.31 不要用宏定义常量或“函数”
#+categories: technology
#+tags: CppCoreGuidelines

[[http://kimi.im/tags.html#CppCoreGuidelines-ref][C++ 核心指南目录]]

"Don’t use macros for constants or “functions”"

理由

很多bug是因为宏引起的。宏不遵循通常的作用域范围和类型规则。宏不遵循通
常的参数传递规则。开发人员和编译器所看到的宏是有差异的。宏会把编译过程
变得复杂。

坏例子

#+begin_src C++ :exports both :flags -std=c++20 :namespaces std :includes  <iostream> <vector> <algorithm> :eval no-export :results output
#define PI 3.14
#define SQUARE(a, b) (a * b)
#+end_src


以下例子更好：

#+begin_src C++ :exports both :flags -std=c++20 :namespaces std :includes  <iostream> <vector> <algorithm> :eval no-export :results output
constexpr double pi = 3.14;
template<typename T> T square(T a, T b) { return a * b; }
#+end_src


强化

如果宏不是用于源码控制（如 ~#ifdef~ 等），请尖叫吧
